---
name: publish
on:
  push:
    branches-ignore:
      - '*'
    tags:
      - 'v[0-9]*'
  workflow_dispatch:
    inputs:
      version:
        description: "Version to be published (e.g., v1.12.0, v1.12.0-1)"
        required: true
        type: string
        default: "latest"

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Get image tags
        id: image_tags
        run: |
          if [[ -n "${{ github.event.inputs.version }}" ]]; then
            VERSION=${{ github.event.inputs.version }}
            RELEASE=${{ github.event.inputs.version }}
            IMAGE_TAGS=(
              "${{ vars.IMAGE_REGISTRY }}/${{ vars.IMAGE_REPOSITORY }}/${{ vars.IMAGE_NAME }}:${VERSION}"
            )
          else
            VERSION=${GITHUB_REF#refs/tags/}
            IMAGE_TAGS=(
              "${{ vars.IMAGE_REGISTRY }}/${{ vars.IMAGE_REPOSITORY }}/${{ vars.IMAGE_NAME }}:latest"
              "${{ vars.IMAGE_REGISTRY }}/${{ vars.IMAGE_REPOSITORY }}/${{ vars.IMAGE_NAME }}:${VERSION%.*}"
              "${{ vars.IMAGE_REGISTRY }}/${{ vars.IMAGE_REPOSITORY }}/${{ vars.IMAGE_NAME }}:${VERSION}"
            )
          fi
          ( IFS=$','; echo "IMAGE_TAGS=${IMAGE_TAGS[*]}" >> $GITHUB_OUTPUT )

      - name: Validate Helm Chart version
        if: github.event_name != 'workflow_dispatch'
        run: |
          VERSION="${{ steps.image_tags.outputs.VERSION }}"
          HELM_CHART_VERSION=$(sed -nr 's/^appVersion: (.*)/\1/p' helm/Chart.yaml)
          if [[ "v${HELM_CHART_VERSION}" != "${VERSION}" ]]; then
            echo "Helm chart version does not match tag!"
            exit 1
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: steps.image_tags.outputs.IMAGE_TAGS
        with:
          version: latest

      - name: Login to Image Registry
        uses: docker/login-action@v3
        if: steps.image_tags.outputs.IMAGE_TAGS
        with:
          registry: ${{ vars.IMAGE_REGISTRY }}/${{ vars.IMAGE_REPOSITORY }}
          username: ${{ secrets.IMAGE_REGISTRY_USERNAME }}
          password: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}

      - name: Build and push
        if: steps.image_tags.outputs.IMAGE_TAGS
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Containerfile
          push: true
          tags: ${{ steps.image_tags.outputs.IMAGE_TAGS }}
          cache-from: type=gha,scope=${{ vars.IMAGE_NAME }}
          cache-to: type=gha,mode=max,scope=${{ vars.IMAGE_NAME }}

  publish-helm-charts:
    needs: publish
    env:
      IMAGE_NAME: poolboy 
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Checkout gh-pages
      uses: actions/checkout@v4
      with:
        ref: gh-pages
        path: gh-pages

    - name: Configure Helm
      uses: azure/setup-helm@v4
      with:
        version: latest

    - name: Lint Helm Chart
      run: helm lint helm/

    - name: Package Helm Chart
      run: |
        helm dep up helm/
        helm package helm/
        mv ${{ env.IMAGE_NAME }}-*.tgz gh-pages
        helm repo index --url https://redhat-cop.github.io/${{ env.IMAGE_NAME }} gh-pages

    - name: Push Changes to GH Pages
      run: |
        cd gh-pages
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
        git add .
        git diff --cached --quiet && echo 'No changes to commit' && exit 0
        git commit -m "Updating Helm Chart Repository"
        git push
